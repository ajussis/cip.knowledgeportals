[buildout]
parts =
    productdistros
    instance
    zopepy
    plonesite
    ipzope
    plonesite_replace
    plonesite_new


# Change the number here to change the version of Plone being used
extends = 
    http://download.zope.org/Zope2/index/2.12.3/versions.cfg
    http://dist.plone.org/release/4.0rc1/versions.cfg
versions = versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =

    http://dist.plone.org/release/4.0rc1
    http://dist.plone.org/thirdparty

# Add additional eggs here
eggs =
    PILwoTk
    cip.sppolicy4
    cip.sptheme4
    cip.spcontent4
    gdata==2.0.4
    Products.Clouseau
    Products.DocFinderTab
    Products.Gloworm
    iw.debug

#    cmf.pt

#zcml = 
#    cmf.pt

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
    src/cip.sppolicy4
    src/cip.sptheme4
    src/cip.spcontent4
    src/collective.googleanalytics


# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.distros
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[instance]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = on
#verbose-security = on
blob-storage = var/blobstorage
# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = Plone my.package
eggs =
    Zope2
    Plone
    ${buildout:eggs}
    raptus.multilanguageplone
    raptus.multilanguagefields
    borg.project
    plone.reload
    collective.googleanalytics
    collective.plonetruegallery[all]
    collective.uploadify
    quintagroup.plonecomments
    sc.social.viewcounter
#    slc.publications
    collective.navigationtoggle
    collective.contacts
    iservices.rssdocument 
    tecnoteca.googlemap
    Products.Doormat
    collective.tabr
    wc.pageturner 
    collective.superfish
    collective.pdfpeek

environment-vars =
    zope_i18n_compile_mo_files = true

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    raptus.multilanguageplone
    raptus.multilanguagefields
    borg.project
    cip.sppolicy4
    plone.reload
    collective.googleanalytics
    collective.plonetruegallery
    collective.uploadify
    iw.debug
    quintagroup.plonecomments
    sc.social.viewcounter
#    slc.publications
    collective.navigationtoggle
    collective.contacts
    iservices.rssdocument 
    tecnoteca.googlemap
    Products.Doormat
    collective.tabr
    wc.pageturner 
    collective.superfish
    collective.pdfpeek

products =
    ${buildout:directory}/products
    ${productdistros:location}

[zopepy]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

[plonesite]
recipe = collective.recipe.plonesite
site-replace = False
site-id = sweetpotato
instance = instance
products = 
    cip.spcontent4
    Clouseau

[plonesite_replace]
recipe = collective.recipe.plonesite
site-replace = false
site-id = sweetpotato2
instance = instance
products-initial = 
    raptus.multilanguageplone
    raptus.multilanguagefields
    collective.tabr
    tecnoteca.googlemap
    borg.project
    collective.plonetruegallery
    cip.spcontent4
    cip.sppolicy4
    cip.sptheme4
#products = 
#    cip.spcontent4
#    cip.sppolicy4
#    cip.sptheme4

[plonesite_new]
recipe = collective.recipe.plonesite
site-replace = true
site-id = sweetpotato3
instance = instance
products-initial = 
    raptus.multilanguageplone
    raptus.multilanguagefields
    tecnoteca.googlemap
    collective.tabr
    borg.project
    collective.plonetruegallery
#    cip.spcontent4
#    cip.sppolicy4
#    cip.sptheme4
products = 
    cip.spcontent4
    cip.sppolicy4
    cip.sptheme4

[versions]
z3c.form = 2.3.2
plone.app.z3cform = 0.5.0
plone.z3cform = 0.6.0
zope.schema = 3.6.0

[ipzope]
# an IPython Shell for interactive use with zope running.
# you also need to put
# https://svn.plone.org/svn/collective/dotipython/trunk/
# ipy_profile_zope.py
# to your $HOME/.ipython directory for the following to work.
recipe = zc.recipe.egg
eggs =
    ipython
    ${instance:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${instance:location}"
    sys.argv[1:1] = "-p zope".split()
scripts = ipython=ipzope
