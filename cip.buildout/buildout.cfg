[buildout]
parts =
    productdistros
#    instance
    zopepy
#    plonesite
#    plonesite_replace
#    plonesite_new
#    lxml
    ipzope
    zeo
    client1
    client2

# Change the number here to change the version of Plone being used
extends =
    http://download.zope.org/Zope2/index/2.12.3/versions.cfg
    http://dist.plone.org/release/4.0/versions.cfg
    http://good-py.appspot.com/release/dexterity/1.0b2?plone=4.0.1
versions = versions


# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.0
    http://dist.plone.org/thirdparty

# Add additional eggs here
eggs =
    PILwoTk
    cip.sppolicy4
    cip.sptheme4
    cip.spcontent4
    gdata==2.0.4
#    Products.Clouseau
#    Products.DocFinderTab
#    Products.Gloworm
#    iw.debug
#    cmf.pt
    Products.UserField
    archetypes.schemaextender
    cip.potatotheme

#zcml =
#    cmf.pt

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
    src/cip.sppolicy4
    src/cip.sptheme4
    src/cip.spcontent4
    src/collective.googleanalytics
    src/collective.portlet.explore
    src/cip.potatotheme


# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.distros
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[client1]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
user = admin:admin
zeo-client = on
zeo-address = ${zeo:zeo-address}
http-address = 8080
debug-mode = on
#verbose-security = on
shared-blob = on

blob-storage = var/blobstorage

eggs =
    Zope2
    Plone
    ${buildout:eggs}
    raptus.multilanguageplone
    raptus.multilanguagefields
    borg.project
    plone.reload
    collective.googleanalytics
    collective.plonetruegallery[all]
    collective.uploadify
#    quintagroup.plonecomments
#    sc.social.viewcounter
#    slc.publications
    collective.navigationtoggle
    collective.contacts
#    iservices.rssdocument
    tecnoteca.googlemap
#    Products.Doormat
    collective.tabr
    wc.pageturner==0.6
#    collective.superfish
#    collective.pdfpeek
    Solgema.PortletsManager
    collective.carousel==1.3
    plone.app.discussion==1.0b7
    collective.dancing
#    collective.contentrules.mailtogroup
    Products.EasyNewsletter
    collective.portlet.explore
    mfabrik.webandmobile
    lxml == 2.2.6
    Products.windowZ==1.3b2
    Products.Ploneboard==2.2

environment-vars =
    zope_i18n_compile_mo_files = true

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    raptus.multilanguageplone
    raptus.multilanguagefields
    borg.project
    cip.sppolicy4
    plone.reload
    collective.googleanalytics
    collective.plonetruegallery
    collective.uploadify
#    iw.debug
#    quintagroup.plonecomments
#    sc.social.viewcounter
#    slc.publications
    collective.navigationtoggle
    collective.contacts
#    iservices.rssdocument
    tecnoteca.googlemap
#    Products.Doormat
    collective.tabr
#    wc.pageturner
#    collective.superfish
#    collective.pdfpeek
    Solgema.PortletsManager
    collective.carousel
    plone.app.discussion
    collective.dancing
#    collective.contentrules.mailtogroup
    Products.EasyNewsletter
    collective.portlet.explore
    Products.windowZ
    Products.Ploneboard

products =
    ${buildout:directory}/products
    ${productdistros:location}

[client2]
recipe = plone.recipe.zope2instance
http-address = 8081
#zope2-location = ${client1:zope2-location}
zeo-client = ${client1:zeo-client}
zeo-address = ${client1:zeo-address}
blob-storage = ${client1:blob-storage}
shared-blob = ${client1:shared-blob}
user = ${client1:user}
products = ${client1:products}
eggs = ${client1:eggs}
zcml = ${client1:zcml}

[zopepy]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = ${client1:eggs}
interpreter = zopepy
scripts = zopepy

[plonesite]
recipe = collective.recipe.plonesite
site-replace = False
site-id = sweetpotato
instance = client1
products =
    cip.spcontent4
    Clouseau

[plonesite_replace]
recipe = collective.recipe.plonesite
site-replace = false
site-id = sweetpotato2
instance = client1
products-initial =
    raptus.multilanguageplone
    raptus.multilanguagefields
    collective.tabr
    tecnoteca.googlemap
    borg.project
    collective.plonetruegallery
    cip.spcontent4
    cip.sppolicy4
    cip.sptheme4
#products =
#    cip.spcontent4
#    cip.sppolicy4
#    cip.sptheme4

[plonesite_new]
recipe = collective.recipe.plonesite
site-replace = true
site-id = sweetpotato3
instance = client1
products-initial =
    raptus.multilanguageplone
    raptus.multilanguagefields
    tecnoteca.googlemap
    collective.tabr
    borg.project
    collective.plonetruegallery
#    cip.spcontent4
#    cip.sppolicy4
#    cip.sptheme4
products =
    cip.spcontent4
    cip.sppolicy4
    cip.sptheme4

[versions]
z3c.form = 2.3.2
plone.app.z3cform = 0.5.0
plone.z3cform = 0.6.0
zope.schema = 3.6.0
#pinning new z3c.form and z3c.formfor collective.dancing
#plone.app.z3cform = 0.4.9
#plone.z3cform = 0.5.10
#z3c.form = 2.2.0
#zope.browserresource = 3.9.0


[ipzope]
# an IPython Shell for interactive use with zope running.
# you also need to put
# https://svn.plone.org/svn/collective/dotipython/trunk/
# ipy_profile_zope.py
# to your $HOME/.ipython directory for the following to work.
recipe = zc.recipe.egg
eggs =
    ipython
    ${client1:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${client1:location}"
    sys.argv[1:1] = "-p zope".split()
scripts = ipython=ipzope


[lxml]
#recipe = z3c.recipe.staticlxml
recipe=plone.recipe.lxml
egg = lxml==2.2.6
force = false

[zeo]
recipe = plone.recipe.zeoserver
#zope2-location = ${zope2:location}
zeo-address = 127.0.0.1:8100
zeo-var = ${buildout:directory}/var
blob-storage = ${zeo:zeo-var}/blobstorage
eggs = plone.app.blob
shared-blob = on
